#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status

# Setup common env vars and folders
source /var/vcap/packages/bosh-helpers/ctl_setup.sh 'cf-containers-broker'
export CF_CONTAINERS_BROKER_PID_FILE=${CF_CONTAINERS_BROKER_PID_DIR}/cf-containers-broker.pid

export PATH=/var/vcap/packages/cf-containers-broker/bin:/var/vcap/packages/ruby/bin:$PATH

case $1 in

  start)
    pid_guard ${CF_CONTAINERS_BROKER_PID_FILE} ${JOB_NAME}
    
    chown -R vcap:vcap ${CF_CONTAINERS_BROKER_LOG_DIR}
    chown -R vcap:vcap ${CF_CONTAINERS_BROKER_PID_DIR}

    echo $$ > ${CF_CONTAINERS_BROKER_PID_FILE}

    # Set limitations on system resources
    ulimit -c unlimited
    ulimit -v unlimited

    # Fetch offine containers Images
    if [[ "${CF_CONTAINERS_OFFINE_IMAGES}X" != "X" ]]; then
      /var/vcap/jobs/fetch-containers-images/bin/run \
          >>${CF_CONTAINERS_BROKER_LOG_DIR}/fetch_containers_images.stdout.log \
          2>>${CF_CONTAINERS_BROKER_LOG_DIR}/fetch_containers_images.stderr.log
    fi

    # Fetch Containers Images
    if [[ "${CF_CONTAINERS_FETCH_IMAGES}X" != "X" ]]; then
      bundle exec fetch_container_images \
          >>${CF_CONTAINERS_BROKER_LOG_DIR}/fetch_containers_images.stdout.log \
          2>>${CF_CONTAINERS_BROKER_LOG_DIR}/fetch_containers_images.stderr.log
    fi

    # Update Containers
    if [[ "${CF_CONTAINERS_UPDATE_CONTAINERS}X" != "X" ]]; then
      bundle exec update_all_containers \
          >>${CF_CONTAINERS_BROKER_LOG_DIR}/update_containers.stdout.log \
          2>>${CF_CONTAINERS_BROKER_LOG_DIR}/update_containers.stderr.log
    fi

    # We remove the PID file (own process) to prevent a collision with Unicorn
    rm -fr ${CF_CONTAINERS_BROKER_PID_FILE}

    # Start CF-Containers-Broker
    exec bundle exec unicorn \
        --daemonize \
        -c $CF_CONTAINERS_BROKER_CONF_DIR/unicorn.conf.rb \
        >>${CF_CONTAINERS_BROKER_LOG_DIR}/${OUTPUT_LABEL}.stdout.log \
        2>>${CF_CONTAINERS_BROKER_LOG_DIR}/${OUTPUT_LABEL}.stderr.log
    ;;

  stop)
    # Stop CF-Containers-Broker
    kill_and_wait ${CF_CONTAINERS_BROKER_PID_FILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
